<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnJoinChatRoom.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>